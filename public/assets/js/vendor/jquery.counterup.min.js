/*!
 * jquery.counterup.js 1.0
 *
 * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal
 * Released under the GPL v2 License
 *
 * Date: Nov 26, 2013
 */
(function (e) {
  'use strict';
  e.fn.counterUp = function (options) {
    var settings = e.extend({ time: 400, delay: 10 }, options);

    return this.each(function () {
      var element = e(this);
      var nums = element.data('counterup-nums') || [];

      var counterFunc = function () {
        var numItems = nums.length;
        var text = element.text().replace(/,/g, '');
        var isComma = /[0-9]+,[0-9]+/.test(text);
        var isNum = /^[0-9]+$/.test(text);
        var isFloat = /^[0-9]+\.[0-9]+$/.test(text);
        var decimalPlaces = isFloat ? (text.split('.')[1] || []).length : 0;

        for (var i = numItems; i >= 1; i--) {
          var newValue = parseFloat((text / numItems) * i);
          if (isFloat) {
            newValue = newValue.toFixed(decimalPlaces);
          }
          if (isComma) {
            while (/(\d+)(\d{3})/.test(newValue.toString())) {
              newValue = newValue.toString().replace(/(\d+)(\d{3})/, '$1,$2');
            }
          }
          nums.unshift(newValue);
        }

        element.data('counterup-nums', nums);
        element.text('0');

        var updateCounter = function () {
          if (Array.isArray(element.data('counterup-nums'))) {
            element.text(element.data('counterup-nums').shift());
            if (element.data('counterup-nums').length) {
              setTimeout(element.data('counterup-func'), settings.delay);
            } else {
              delete element.data('counterup-nums');
              element.data('counterup-nums', null);
              element.data('counterup-func', null);
            }
          }
        };

        element.data('counterup-func', updateCounter);
        setTimeout(element.data('counterup-func'), settings.delay);
      };

      element.waypoint(counterFunc, { offset: '100%', triggerOnce: true });
    });
  };
})(jQuery);
